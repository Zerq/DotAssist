{"version":3,"file":"Home.js","sourceRoot":"","sources":["../../../src/home/Home.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,WAAW,CAAC;AAEhC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,OAAO,EAAE,aAAa,EAAgB,MAAM,wCAAwC,CAAC;AAErF,MAAM,CAAN,IAAY,MAKX;AALD,WAAY,MAAM;IACd,+DAAkB,CAAA;IAClB,uDAAc,CAAA;IACd,uDAAc,CAAA;IACd,qDAAa,CAAA;AACjB,CAAC,EALW,MAAM,KAAN,MAAM,QAKjB;AAED,MAAM,OAAO,IAAI;IAAjB;QACY,qBAAgB,GAAG,IAAI,UAAU,EAAE,CAAC;QAErC,UAAK,GAAW,MAAM,CAAC,kBAAkB,CAAC;IAmCrD,CAAC;IAhCU,KAAK,CAAC,GAAG;QACZ,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACrD,MAAM,YAAY,GAAiB,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAErE,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAS,oBAAoB,EAAE,KAAK,EAAC,CAAC,EAAC,EAAE;YAC5D,QAAQ,CAAC,EAAE,CAAC;gBACR,KAAK,YAAY;oBACb,MAAM,IAAI,GAAG,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;oBAC3C,MAAM,CAAC,GAAG,CAAC,CAAC;oBACZ,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,eAAe,EAAE,CAAC;oBACpD,IAAI,MAAM,KAAK,aAAa,CAAC,QAAQ,EAAE,CAAC;wBACpC,KAAK,CAAC,UAAU,CAAC,CAAC;oBACtB,CAAC;oBAED,MAAM;gBACV,KAAK,SAAS;oBAGV,MAAM;YACd,CAAC;QACL,CAAC,CAAC,CAAC;QAGH,4CAA4C;QAC5C,8BAA8B;QAC9B,8BAA8B;QAC9B,4BAA4B;QAC5B,6BAA6B;QAC7B,iCAAiC;IACrC,CAAC;CAGJ","sourcesContent":["import { App } from \"./AppPipe\";\r\nimport { FileView } from \"./Components/FileViewer/FileView\";\r\nimport { FileSystem } from \"./FileSystem\";\r\nimport { DomainEvent } from \"./DomainEvent\";\r\nimport { DialogResults, DotNetDialog } from \"./Components/DotNetDialog/DotNetDialog\";\r\n\r\nexport enum Stages {\r\n    BaseFolderSelector,\r\n    DotNetTemplate,\r\n    ScriptTemplate,\r\n    StumpSelector\r\n}\r\n\r\nexport class Home {\r\n    private DirectoryService = new FileSystem();\r\n    public Events: Map<string, DomainEvent>;\r\n    public stage: Stages = Stages.BaseFolderSelector;\r\n    \r\n\r\n    public async Run() {\r\n        const fileview = document.getElementById(\"FileView\");\r\n        const dotnetDialog = <DotNetDialog>document.querySelector(\"#dotnet\");\r\n\r\n        await App.Pipe.Register<string>(\"AppMenuItemClicked\", async e => {\r\n            switch (e) {\r\n                case \"NewProject\":\r\n                    const path = fileview.getAttribute(\"path\");\r\n                    const x = 0;\r\n                    const result = await dotnetDialog.ShowDialogAsync();\r\n                    if (result === DialogResults.Complete) {\r\n                        alert(\"complete\");\r\n                    }\r\n\r\n                    break;\r\n                case \"NewFile\":\r\n             \r\n\r\n                    break;\r\n            }\r\n        });\r\n       \r\n \r\n        //const img = document.createElement(\"img\");\r\n        //img.src = Assets.CSharpFile;\r\n        //img.alt = Assets.CSharpFile;\r\n        //img.style.width = \"100px\";\r\n        //img.style.height = \"100px\";\r\n        //document.body.appendChild(img);\r\n    }\r\n\r\n\r\n}\r\n"]}